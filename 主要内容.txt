
一.markdown书写 （语雀文档）

  1.下载安装 Typora
    链接：https://pan.baidu.com/s/1sMuufOdVLwZ5vMuCtr2hFg?pwd=shui 
    提取码：shui 

  2.书写 markdown
    标题 / 列表 / 加粗 / 代码 
    引用 / 表格 / 链接 / 图片相对路径
	
	
二.git 基本操作

  1.下载安装 git
    https://git-scm.com/
	
	上面慢,可以到腾讯软件中心下载
	https://pc.qq.com/
	
  2.配置常用信息
    git config --global user.name  "h2o"
	git config --global user.email "xx@qq.com"
	
	git config -l
	
	补充知识: 相关信息被记录在 用户目录中的 .gitconfig 文件
	
  3.创建本地仓库
    git init
	
  4.查看状态
    git status
		
  5.临时保存(添加到'暂存区')
    git add .
	
	git status
		
  6.提交生成版本
    git commit -m "备注"
		---
  7.查看版本
    git log
    git reflog
	
  8.切换版本
    git reset --hard 版本号 (谨慎, 当前工作区&暂存区内容会清空丢失)
	git reset 版本号
	
	用户管理功能 第一天
	
	类别管理功能 第一天晚上先练一遍, 先敲出来
	
	商品管理功能
	
	补充知识:
	    1)git reset HEAD^
		  git reset HEAD^^
		  git reset HEAD~1
          git reset HEAD~2  
		  
  9.分支
    git  branch   分支名   # 创建分支   (checkout, 检出)
    git  checkout 分支名   # 切换分支
	
	补充知识:
	    git  checkout -b  分支名   # 创建分支并切换
	    git  branch                # 查看所有分支
		git  branch  -d  分支名    # 删除分支 
	
	
三.使用 gitee 远程仓库 - 存放作业	

  1.创建远程仓库
	
	
  2.建立远程连接(别名)
    git remote add origin https://gitee.com/xxx/yyy.git
	
	补充知识:
	    1)查看所有别名
		git remote -v
    
	    2)如果地址不对, 可以用下面命令修改
        git remote set-url origin <newurl>
	
	    3)如果修改别名
	    git remote rename 旧名 新名
	
	    4)如果删除别名
	    git remote rm 名称

  3.拉取
    git pull origin master:master   # 本地分支:远程分支
	git pull origin master          # 简写
	
  4.推送
    git push origin master:master   # 本地分支:远程分支
	git push origin master          # 简写
	
  5.设置仓库为公开状态
    
  6.提交仓库地址
  
  
四.克隆别人的仓库代码

  1.克隆到自己仓库
    fork
  
  2.直接克隆到本地
    git clone https://gitee.com/zce/caz.git
  
  
五.使用 github 远程仓库

  0.如何访问
    host方案: https://raw.hellogithub.com/hosts
	把网页上内容,复制,保存到 
	C:\Windows\System32\drivers\etc 目录中的 hosts 文件中
	
	UU加速方案(需要实名认证)
  
  1.注册账号
    Sign in  登录
	Sign up  注册
  
  2.配置 personal access token
    参考文档: https://www.jianshu.com/p/ab5977d763e9
	
  3.创建仓库 / origin / pull / push 
  
  
六.实现个人博客
 
  0.下载安装 node
    http://nodejs.cn/download/
  
  1.创建安装
  
	mkdir my-blog

	cd my-blog

	npm init -y

	npm i vuepress -D

	mkdir docs

	echo '拉勾前端' > docs/README.md
	
  2.编辑 package.json 
    {
	  "scripts": {
	    "dev": "vuepress dev docs --open --host localhost",
		"build": "vuepress build docs"
	  }
	}

  3.启动
    npm run dev	
  	
  4.创建 docs / .vuepress / config.js  配置标题和描述
    module.exports = {
	  // 1.标题与描述
	  title: '我爱前端',
	  description: '记录所有学习笔记',
	  themeConfig: {
	    // 1.右上角导航
		nav: [
		  { text: '首页', link: '/' },
		  {
			text: '水哥的博客',
			items: [
			  { text: '京东', link: 'https://www.jd.com' },
			  { text: '百度', link: 'https://www.baidu.com'}
			]
		  }
		],
	  }
	}
	
	ctrl + c  结束当前项目
	npm run dev  重启
	
	
  5.创建 md 文件 (文件内容随意)
    docs /
	     index.md
		 
	     / frontend / index.md
	     / frontend / html.md
	     / frontend / css.md
	     / frontend / js.md
		 
		 / backend / index.md
		 / backend / php.md
		 / backend / java.md
		 / backend / mysql.md
		 
  
  6.编辑 docs / .vuepress / config.js 配置左边侧边栏
    module.exports = {
	  // 1.标题与描述
	  title: '我爱前端',
	  description: '记录所有学习笔记',
	  themeConfig: {
	    // 1.右上角导航
		nav: [
		  { text: '首页', link: '/' },
		  {
			text: '水哥的博客',
			items: [
			  { text: '京东', link: 'https://www.jd.com' },
			  { text: '百度', link: 'https://www.baidu.com'}
			]
		  }
		],
		// 2.左边侧边栏
		displayAllHeaders: true,
		sidebar: [
		  { 
			title: '前端',
			path: '/frontend',
			collapsable: false,
			children: [
			  { title: 'HTML',       path: '/frontend/html' },
			  { title: 'CSS',        path: '/frontend/css' },
			  { title: 'JavaScript', path: '/frontend/js' }
			]
		  },
		  {
		    title: '后端',
			path: '/backend',
			collapsable: true,
			children: [
			  { title: 'PHP',   path: '/backend/php' },
			  { title: 'MySQL', path: '/backend/mysql' },
			  { title: 'JAVA',  path: '/backend/java' }
			]
		  }
		]
	  }
	}
	
	ctrl + c 结束项目
	npm run dev  重新启动
	
  7.结束项目 ctrl + c , 然后 npm run build 生成结果文件
    vuepress官网: https://vuepress.vuejs.org/zh/
  
  8.把 html 当仓库传到 github

    1.页面点击开通  pages
  
    2.配置自定义域名
	  阿里云 https://www.aliyun.com/
  
   未实现: 
     自动生成侧边栏
	 写文章后, 自动 build ,放到 github